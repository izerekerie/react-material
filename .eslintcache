[{"C:\\Users\\User\\Documents\\REACT\\FORM-VALIDATION\\src\\index.js":"1","C:\\Users\\User\\Documents\\REACT\\FORM-VALIDATION\\src\\App.js":"2","C:\\Users\\User\\Documents\\REACT\\FORM-VALIDATION\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Documents\\REACT\\FORM-VALIDATION\\src\\Form.js":"4","C:\\Users\\User\\Documents\\REACT\\FORM-VALIDATION\\src\\FormSignup.js":"5","C:\\Users\\User\\Documents\\REACT\\FORM-VALIDATION\\src\\useForm.js":"6","C:\\Users\\User\\Documents\\REACT\\FORM-VALIDATION\\src\\validateInfo.js":"7"},{"size":478,"mtime":1607021892294,"results":"8","hashOfConfig":"9"},{"size":155,"mtime":1607022467795,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":192,"mtime":1607022353962,"results":"12","hashOfConfig":"9"},{"size":2286,"mtime":1607087506945,"results":"13","hashOfConfig":"9"},{"size":603,"mtime":1607087141867,"results":"14","hashOfConfig":"9"},{"size":902,"mtime":1607087428653,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"b20zaw",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\User\\Documents\\REACT\\FORM-VALIDATION\\src\\index.js",[],["33","34"],"C:\\Users\\User\\Documents\\REACT\\FORM-VALIDATION\\src\\App.js",[],"C:\\Users\\User\\Documents\\REACT\\FORM-VALIDATION\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\REACT\\FORM-VALIDATION\\src\\Form.js",[],"C:\\Users\\User\\Documents\\REACT\\FORM-VALIDATION\\src\\FormSignup.js",["35"],"import React from 'react'\r\nimport useForm from './useForm'\r\nimport validate from './validateInfo'\r\nfunction FormSignup() {\r\n\r\n    const {handleChange,values,handleSubmit,errors} = useForm(validate)\r\n    return (\r\n        <div>\r\n           <form onSubmit={handleSubmit}>\r\n               <h1>Get started with us today ! create your account</h1>\r\n               <div>\r\n                   <label htmlFor=\"username\">Uername</label>\r\n                       <input type=\"text\" \r\n                       name='username'\r\n                        placeholder='enter your username'\r\n                        value={values.username}\r\n                        onChange={handleChange}/>\r\n                        {errors.username && <p>{errors.username }</p>}\r\n                    \r\n               </div>\r\n               <div>\r\n                   <label htmlFor=\"email\">Email </label>\r\n                       <input type=\"text\"\r\n                        name='email' \r\n                        placeholder='enter your email'\r\n                        value={values.email}\r\n                        onChange={handleChange}/>\r\n                   {errors.email && <p>{errors.email }</p>}\r\n               </div>\r\n               <div>\r\n                   <label htmlFor=\"email\">Password </label>\r\n                       <input type=\"password\"\r\n                        name='password'\r\n                         placeholder='enter your password'\r\n                         value={values.password}\r\n                         onChange={handleChange}\r\n                         />\r\n                  {errors.password && <p>{errors.password }</p>}\r\n               </div>\r\n               <div>\r\n                   <label htmlFor=\"email\">Confirm Password </label>\r\n                       <input type=\"password\" \r\n                       name='password2' \r\n                       placeholder='confirm your password'\r\n                       value={values.password2}\r\n                       onChange={handleChange}/>\r\n                  {errors.password2 && <p>{errors.password2 }</p>}\r\n               </div>\r\n                <button>Sign up</button>\r\n                <span>Already Have account? login\r\n                    <a href=\"#\">here</a></span>\r\n           </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default FormSignup\r\n","C:\\Users\\User\\Documents\\REACT\\FORM-VALIDATION\\src\\useForm.js",["36","37"],"import React,{useState,useEffect} from 'react'\r\n\r\nconst useForm=(validate)=> {\r\n    const [values, setValues]=useState({\r\n        username:'',\r\n        email:'',\r\n        password:'',\r\n        password2:''\r\n    })\r\n    const [errors,setErrors] = useState({})\r\n    const handleChange = e =>{\r\n        const {name,value}=e.target\r\n        setValues({\r\n            ...values,[name]:value\r\n        })\r\n    }\r\n    const handleSubmit=e=>{\r\n        e.preventDefault();\r\n        setErrors(validate(values));\r\n\r\n    };\r\n\r\n    return {handleChange ,values,handleSubmit,errors}\r\n  \r\n};\r\nexport default useForm;\r\n\r\n","C:\\Users\\User\\Documents\\REACT\\FORM-VALIDATION\\src\\validateInfo.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":51,"column":21,"nodeType":"44","endLine":51,"endColumn":33},{"ruleId":"45","severity":1,"message":"46","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":13},{"ruleId":"45","severity":1,"message":"49","line":1,"column":24,"nodeType":"47","messageId":"48","endLine":1,"endColumn":33},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]